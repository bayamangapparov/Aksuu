
<table>
    <div class="content">
        <h2>Жанылыктар</h2>
        {% for entity in entities %}
            <div class="raw newsBack">
                <div class="media-rigth media-middle newsBack1">
                    <a href="{{ path('info_news_get', {'id':entity.id}) }}">
                        <div>
                            {% thumbnail entity.photo, 'small' with {'class': 'thumbnail','alt': '...', 'style': 'float: left; margin-right: 15px'} %}
                        </div>
                        <h5>{{ entity.title }} </h5>
                    </a>
                </div>
                <div class="media-body">
                    <p class="media-heading"> {{ entity.text|truncate(101)|raw }} </p>
                </div>
            </div>
            <br>
        {% endfor %}
        <div class="navigation" align="center">
            {{ knp_pagination_render(entities) }}
        </div>
    </div>
</table>
{# display navigation #}

<script>
    function findAndReplace(searchText, replacement, searchNode) {
        if (!searchText || typeof replacement === 'undefined') {
            // Throw error here if you want...
            return;
        }
        var regex = typeof searchText === 'string' ?
                        new RegExp(searchText, 'g') : searchText,
                childNodes = (searchNode || document.body).childNodes,
                cnLength = childNodes.length,
                excludes = '';
        while (cnLength--) {
            var currentNode = childNodes[cnLength];
            if (currentNode.nodeType === 1 &&
                    (excludes + ',').indexOf(currentNode.nodeName.toLowerCase() + ',') === -1) {
                arguments.callee(searchText, replacement, currentNode);
            }
            if (currentNode.nodeType !== 3 || !regex.test(currentNode.data)) {
                continue;
            }
            var parent = currentNode.parentNode,
                    frag = (function () {
                        var html = currentNode.data.replace(regex, replacement),
                                wrap = document.createElement('div'),
                                frag = document.createDocumentFragment();
                        wrap.innerHTML = html;
                        while (wrap.firstChild) {
                            frag.appendChild(wrap.firstChild);
                        }
                        return frag;
                    })();
            parent.insertBefore(frag, currentNode);
            parent.removeChild(currentNode);
        }
    }
    findAndReplace('Следующий', 'Кийинки');
    findAndReplace('Предыдущий', 'Мурунку');
</script>